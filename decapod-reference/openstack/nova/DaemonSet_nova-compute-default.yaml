# Source: nova/templates/daemonset-compute.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    openstackhelm.openstack.org/release_uuid: ""
  labels:
    application: nova
    component: compute
    release_group: nova
  name: nova-compute-default
spec:
  minReadySeconds: 0
  selector:
    matchLabels:
      application: nova
      component: compute
      release_group: nova
  template:
    metadata:
      annotations:
        configmap-bin-hash: 645b0d7e28e8bdfbf61d768043382ec1b8d1ef241e239fdb7f2d4989a84e1727
        configmap-etc-hash: 28643b261d1414ad71e0c550b62f9acea682d339bae53d8cf2fbe120109d9112
        openstackhelm.openstack.org/release_uuid: ""
      labels:
        application: nova
        component: compute
        release_group: nova
    spec:
      containers:
      - command:
        - /tmp/nova-compute.sh
        env:
        - name: CEPH_CINDER_USER
          value: cinder
        - name: CEPH_CINDER_KEYRING
          value: AQAin8tU0CFgEhAATb7sYgtWsh+S5HEbg6MrGg==
        - name: LIBVIRT_CEPH_SECRET_UUID
          value: 
        image: deploy001:5000/stein/ubuntu-source-nova-compute:taco-0.1.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - python
            - /tmp/health-probe.py
            - --config-file
            - /etc/nova/nova.conf
            - --service-queue-name
            - compute
            - --liveness-probe
            - --use-fqdn
          initialDelaySeconds: 120
          periodSeconds: 90
          timeoutSeconds: 70
        name: nova-compute
        readinessProbe:
          exec:
            command:
            - python
            - /tmp/health-probe.py
            - --config-file
            - /etc/nova/nova.conf
            - --service-queue-name
            - compute
            - --use-fqdn
          initialDelaySeconds: 80
          periodSeconds: 90
          timeoutSeconds: 70
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /tmp/nova-compute.sh
          name: nova-bin
          readOnly: true
          subPath: nova-compute.sh
        - mountPath: /tmp/health-probe.py
          name: nova-bin
          readOnly: true
          subPath: health-probe.py
        - mountPath: /etc/nova/nova.conf
          name: nova-etc
          readOnly: true
          subPath: nova-compute.conf
        - mountPath: /etc/nova/logging.conf
          name: nova-etc
          readOnly: true
          subPath: logging.conf
        - mountPath: /etc/nova/api-paste.ini
          name: nova-etc
          readOnly: true
          subPath: api-paste.ini
        - mountPath: /etc/nova/policy.yaml
          name: nova-etc
          readOnly: true
          subPath: policy.yaml
        - mountPath: /etc/sudoers.d/kolla_nova_sudoers
          name: nova-etc
          readOnly: true
          subPath: nova_sudoers
        - mountPath: /etc/nova/rootwrap.conf
          name: nova-etc
          readOnly: true
          subPath: rootwrap.conf
        - mountPath: /etc/nova/rootwrap.d/compute.filters
          name: nova-etc
          readOnly: true
          subPath: compute.filters
        - mountPath: /etc/nova/rootwrap.d/network.filters
          name: nova-etc
          readOnly: true
          subPath: network.filters
        - mountPath: /root/.ssh/config
          name: nova-etc
          readOnly: true
          subPath: ssh-config
        - mountPath: /root/.ssh/id_rsa
          name: nova-ssh
          subPath: ssh-key-private
        - mountPath: /etc/ceph
          mountPropagation: Bidirectional
          name: etcceph
        - mountPath: /lib/modules
          name: libmodules
          readOnly: true
        - mountPath: /var/lib/nova
          mountPropagation: Bidirectional
          name: varlibnova
        - mountPath: /var/lib/libvirt
          mountPropagation: Bidirectional
          name: varliblibvirt
        - mountPath: /run
          name: run
        - mountPath: /sys/fs/cgroup
          name: cgroup
          readOnly: true
        - mountPath: /tmp/pod-shared
          name: pod-shared
        - mountPath: /etc/machine-id
          name: machine-id
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      initContainers:
      - command:
        - kubernetes-entrypoint
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INTERFACE_NAME
          value: eth0
        - name: PATH
          value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
        - name: DEPENDENCY_SERVICE
          value: openstack:rabbitmq,openstack:glance-api,openstack:nova-api,openstack:neutron-server,openstack:nova-metadata
        - name: DEPENDENCY_JOBS
          value: nova-db-sync,nova-rabbit-init
        - name: DEPENDENCY_DAEMONSET
          value: ""
        - name: DEPENDENCY_CONTAINER
          value: ""
        - name: DEPENDENCY_POD_JSON
          value: '[{"labels":{"application":"libvirt","component":"libvirt"},"requireSameNode":true},{"labels":{"application":"neutron","component":"neutron-ovs-agent"},"requireSameNode":true}]'
        - name: DEPENDENCY_CUSTOM_RESOURCE
          value: ""
        image: deploy001:5000/airshipit/kubernetes-entrypoint:v1.0.0
        imagePullPolicy: IfNotPresent
        name: init
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 65534
        volumeMounts: null
      - command:
        - /tmp/nova-compute-init.sh
        env:
        - name: NOVA_USER_UID
          value: "42436"
        image: deploy001:5000/stein/ubuntu-source-nova-compute:taco-0.1.0
        imagePullPolicy: IfNotPresent
        name: nova-compute-init
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /tmp/nova-compute-init.sh
          name: nova-bin
          readOnly: true
          subPath: nova-compute-init.sh
        - mountPath: /var/lib/nova
          name: varlibnova
        - mountPath: /tmp/pod-shared
          name: pod-shared
      - command:
        - chown
        - -R
        - 'nova:'
        - /etc/ceph
        image: deploy001:5000/stein/ubuntu-source-nova-compute:taco-0.1.0
        imagePullPolicy: IfNotPresent
        name: ceph-perms
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /etc/ceph
          name: etcceph
      - command:
        - /tmp/ceph-keyring.sh
        env:
        - name: CEPH_CINDER_USER
          value: cinder
        - name: CEPH_CINDER_KEYRING
          value: AQAin8tU0CFgEhAATb7sYgtWsh+S5HEbg6MrGg==
        - name: LIBVIRT_CEPH_SECRET_UUID
          value: 
        image: deploy001:5000/stein/ubuntu-source-nova-compute:taco-0.1.0
        imagePullPolicy: IfNotPresent
        name: ceph-keyring-placement
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /etc/ceph
          name: etcceph
        - mountPath: /tmp/ceph-keyring.sh
          name: nova-bin
          subPath: ceph-keyring.sh
        - mountPath: /etc/ceph/ceph.conf.template
          name: ceph-etc
          readOnly: true
          subPath: ceph.conf
      - command:
        - /tmp/nova-console-compute-init.sh
        image: deploy001:5000/stein/ubuntu-source-nova-compute:taco-0.1.0
        imagePullPolicy: IfNotPresent
        name: nova-compute-vnc-init
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /tmp/nova-console-compute-init.sh
          name: nova-bin
          readOnly: true
          subPath: nova-console-compute-init.sh
        - mountPath: /tmp/pod-shared
          name: pod-shared
      nodeSelector:
        openstack-compute-node: enabled
      securityContext:
        runAsUser: 42436
      serviceAccountName: nova-compute
      volumes:
      - emptyDir: {}
        name: pod-tmp
      - configMap:
          defaultMode: 365
          name: nova-bin
        name: nova-bin
      - name: nova-etc
        secret:
          defaultMode: 292
          secretName: nova-compute-default
      - name: nova-ssh
        secret:
          defaultMode: 256
          secretName: nova-ssh
      - hostPath:
          path: /var/lib/openstack-helm/compute/nova
        name: etcceph
      - configMap:
          defaultMode: 292
          name: ceph-etc
        name: ceph-etc
      - hostPath:
          path: /lib/modules
        name: libmodules
      - hostPath:
          path: /var/lib/nova
        name: varlibnova
      - hostPath:
          path: /var/lib/libvirt
        name: varliblibvirt
      - hostPath:
          path: /run
        name: run
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroup
      - emptyDir: {}
        name: pod-shared
      - hostPath:
          path: /etc/machine-id
        name: machine-id
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
