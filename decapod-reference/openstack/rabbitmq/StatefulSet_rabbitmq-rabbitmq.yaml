# Source: rabbitmq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "rabbitmq-rabbitmq"
  annotations:
    "openstackhelm.openstack.org/release_uuid": ""
  labels:
    release_group: rabbitmq
    application: rabbitmq
    component: server
spec:
  serviceName: rabbitmq
  replicas: 3
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      release_group: rabbitmq
      application: rabbitmq
      component: server
  template:
    metadata:
      labels:
        release_group: rabbitmq
        application: rabbitmq
        component: server
      annotations:
        "openstackhelm.openstack.org/release_uuid": ""
        configmap-bin-hash: "b9bc97c51bbfb2552c9b8b4f32236c912fb361ecc0fbb6772ea9cf220efdc24d"
        configmap-etc-hash: "d70a2e5d47e2605314bd473dc215fed7e0af0694c671317408aa0eab925b5120"
        secret-rabbit-admin-hash: "2641d086b49fa469af2d5a9cd0b91e086a3c997edcfc2c1f575d0ccee39943b6"
        secret-erlang-cookie-hash: "f9c2a35397a22b98d875eec1818b3f87bbd58e7d4976a0c5fc1087700958862d"
    spec:
      securityContext:
        runAsUser: 999
      serviceAccountName: "rabbitmq-rabbitmq"
      affinity:
        
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: release_group
                    operator: In
                    values:
                    - rabbitmq
                  - key: application
                    operator: In
                    values:
                    - rabbitmq
                  - key: component
                    operator: In
                    values:
                    - server
              topologyKey: kubernetes.io/hostname
            weight: 10
      nodeSelector:
        openstack-control-plane: "enabled"
      initContainers:
        
        - name: init
          image: "deploy001:5000/airshipit/kubernetes-entrypoint:v1.0.0"
          imagePullPolicy: IfNotPresent  
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65534
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INTERFACE_NAME
              value: eth0
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_SERVICE
              value: ""
            - name: DEPENDENCY_DAEMONSET
              value: ""
            - name: DEPENDENCY_CONTAINER
              value: ""
            - name: DEPENDENCY_POD_JSON
              value: ""
            - name: DEPENDENCY_CUSTOM_RESOURCE
              value: ""
          command:
            - kubernetes-entrypoint
          volumeMounts:
            []
        - name: rabbitmq-password
          image: "deploy001:5000/stein/ubuntu-source-heat-engine:taco-0.1.0"
          imagePullPolicy: IfNotPresent
          
          
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 0
          command:
            - /tmp/rabbitmq-password-hash.py
          env:
            - name: RABBITMQ_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "rabbitmq-admin-user"
                  key: RABBITMQ_ADMIN_USERNAME
            - name: RABBITMQ_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "rabbitmq-admin-user"
                  key: RABBITMQ_ADMIN_PASSWORD
            - name: RABBITMQ_DEFINITION_FILE
              value: "/var/lib/rabbitmq/definitions.json"
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
            - name: rabbitmq-bin
              mountPath: /tmp/rabbitmq-password-hash.py
              subPath: rabbitmq-password-hash.py
              readOnly: true
        - name: rabbitmq-cookie
          image: "deploy001:5000/rabbitmq:3.7.13"
          imagePullPolicy: IfNotPresent
          
          
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 0
          command:
            - /tmp/rabbitmq-cookie.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: rabbitmq-bin
              mountPath: /tmp/rabbitmq-cookie.sh
              subPath: rabbitmq-cookie.sh
              readOnly: true
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
            - name: rabbitmq-erlang-cookie
              mountPath: /var/run/lib/rabbitmq/.erlang.cookie
              subPath: erlang_cookie
              readOnly: true
        - name: rabbitmq-perms
          image: "deploy001:5000/rabbitmq:3.7.13"
          imagePullPolicy: IfNotPresent
          
          
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 0
          command:
            - chown
            - -R
            - "rabbitmq:"
            - /var/lib/rabbitmq
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
      containers:
        - name: rabbitmq
          image: "deploy001:5000/rabbitmq:3.7.13"
          imagePullPolicy: IfNotPresent
          
          
          securityContext:
            readOnlyRootFilesystem: false
            runAsUser: 999
          command:
            - /tmp/rabbitmq-start.sh
          ports:
            - name: http
              protocol: TCP
              containerPort: 15672
            - name: amqp
              protocol: TCP
              containerPort: 5672
            - name: clustering
              protocol: TCP
              containerPort: 25672
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_NODENAME
              value: "rabbit@$(MY_POD_NAME).rabbitmq.openstack.svc.cluster.local"
            - name: K8S_SERVICE_NAME
              value: rabbitmq
            - name: K8S_HOSTNAME_SUFFIX
              value: ".rabbitmq.openstack.svc.cluster.local"
            - name: RABBITMQ_ERLANG_COOKIE
              value: "openstack-cookie"
            - name: PORT_HTTP
              value: "15672"
            - name: PORT_AMPQ
              value: "5672"
            - name: PORT_CLUSTERING
              value: "25672"
          readinessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 10
            exec:
              command:
              - /tmp/rabbitmq-readiness.sh
          livenessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 10
            exec:
              command:
              - /tmp/rabbitmq-liveness.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
            - name: rabbitmq-bin
              mountPath: /tmp/rabbitmq-start.sh
              subPath: rabbitmq-start.sh
              readOnly: true
            - name: rabbitmq-bin
              mountPath: /tmp/rabbitmq-readiness.sh
              subPath: rabbitmq-readiness.sh
              readOnly: true
            - name: rabbitmq-bin
              mountPath: /tmp/rabbitmq-liveness.sh
              subPath: rabbitmq-liveness.sh
              readOnly: true
            - name: rabbitmq-etc
              mountPath: /etc/rabbitmq/enabled_plugins
              subPath: enabled_plugins
              readOnly: true
            - name: rabbitmq-etc
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
              readOnly: true
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: rabbitmq-bin
          configMap:
            name: "rabbitmq-rabbitmq-bin"
            defaultMode: 0555
        - name: rabbitmq-etc
          configMap:
            name: "rabbitmq-rabbitmq-etc"
            defaultMode: 0444
        - name: rabbitmq-erlang-cookie
          secret:
            secretName: "rabbitmq-erlang-cookie"
            defaultMode: 0444
        - name: rabbitmq-data
          hostPath:
            path:  /ssd-data/rabbitmq-data
            type: DirectoryOrCreate
